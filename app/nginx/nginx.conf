# If there's x-forwarded-for header, assign its value. Assign IP address
# otherwise.
map $http_x_forwarded_for $maybe_client_ip {
    ~.+ $http_x_forwarded_for;
    default $remote_addr;
}

# Ignore GCP load balancers.
map $maybe_client_ip $loggable {
    hostnames;

    # 35.191.0.0/16
    35.191.* 0;

    # 130.211.0.0/22
    130.211.0.* 0;
    130.211.1.* 0;
    130.211.2.* 0;
    130.211.3.* 0;

    default 1;
}

map $http_x_forwarded_proto $port_used_by_client {
    "http" 80;
    "https" 443;
    default $remote_port;
}

log_format custom '[$time_iso8601] $remote_addr:$port_used_by_client '
                  '($http_x_forwarded_for) "$request" by "$http_user_agent" '
                  'from "$http_referer"';

server {
    access_log /var/log/nginx/access.log custom if=$loggable;

    charset utf-8;
    listen 8080;
    server_name nginx-proxy;

    root /usr/share/nginx/html;

    # Catch all unless another location matches.
    location / {
        try_files $uri =404;
    }

    # Root path.
    location = / {
        try_files /index.html =404;
    }

    location /api/ping {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Host $host;

        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;

        proxy_pass http://api:8000/ping;
    }

    location /ws {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Host $host;

        proxy_connect_timeout 15s;
        proxy_read_timeout 15s;
        proxy_send_timeout 15s;

        proxy_pass http://api:8000/ws;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
